name: Deploy Web App

permissions:
  contents: write
  
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Grant execute permission for mvnw
        run: chmod +x ./mvnw

      - name: Set up Maven Authentication
        run: |
            mkdir -p ~/.m2
            echo "
            <settings>
               <servers>
                  <server>
                     <id>github</id>
                     <username>${{ github.actor }}</username>
                     <password>${{ secrets.PACKAGES_TOKEN }}</password>
                  </server>
               </servers>
            </settings>
            " > ~/.m2/settings.xml

      - name: Build with Maven
        run: ./mvnw clean package

      - name: Upload WAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: webapp-war
          path: target/*.war

      - name: Download WAR artifact
        uses: actions/download-artifact@v4
        with:
          name: webapp-war
          path: docker-build

      - name: Create Docker context directory
        run: mkdir -p docker

      - name: Copy WAR to Docker context
        run: |
          cp docker-build/*.war docker/administrator.war

      - name: Build Docker image
        run: |
          docker build -t nikolasluiz123/fitnesspro-administrator:latest docker

      - name: Push Docker image to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push nikolasluiz123/fitnesspro-administrator
  
  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up XML tools
        run: sudo apt-get install -y libxml2-utils

      - name: Extract version
        id: get_version
        run: |
          RAW_VERSION=$(xmllint --xpath "/*[local-name()='project']/*[local-name()='version']/text()" pom.xml)
          CLEAN_VERSION=$(echo "$RAW_VERSION" | sed 's/-SNAPSHOT//')
          FINAL_VERSION="${CLEAN_VERSION}${{ github.event.inputs.tag_suffix }}"
          echo "VERSION=$FINAL_VERSION" >> $GITHUB_ENV

      - name: Configure Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Create Git tag
        run: |
          git tag ${{ env.VERSION }}
          git push origin ${{ env.VERSION }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          name: "Release ${{ env.VERSION }}"
          generate_release_notes: true

  deploy:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: SSH and deploy
        run: |
          echo "${{ secrets.SERVER_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          ssh -i private_key.pem -o StrictHostKeyChecking=no ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} << EOF
            docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"
            docker pull nikolasluiz123/fitnesspro-administrator
            docker stop administrator-web-app
            docker image prune -a -f
            docker rm administrator-web-app        
            docker run -d -p 8080:8080 \
            -e JAVA_OPTS="-DFITNESS_PRO_ADMINISTRATOR_ENV=remote -DJWT_TOKEN=${{ secrets.JWT_TOKEN }}" \
            --name administrator-web-app nikolasluiz123/fitnesspro-administrator
          EOF
          rm private_key.pem